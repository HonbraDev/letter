{"version":3,"sources":["components/Toolbar.tsx","functions/editor.ts","components/Folders.tsx","components/Navbar.tsx","components/Editor.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Toolbar","lastHandle","Fragment","className","value","getQuill","window","quillEditor","loadDocument","doc","setContents","openFilePicker","a","showOpenFilePicker","fileHandle","openFile","getFile","file","text","contents","JSON","parse","alert","saveFile","createWritable","writable","write","stringify","getContents","close","Folders","props","id","open","i","map","elem","Navbar","foldersOpen","role","aria-label","onClick","setFoldersOpen","Editor","onMouseDown","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","Quill","theme","modules","toolbar","container"],"mappings":"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","file":"static/js/main.0661b586.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Toolbar() {\n  return (\n    <React.Fragment>\n      <span className=\"ql-formats\">\n        <select className=\"ql-header\"></select>\n      </span>\n      <span className=\"ql-formats\">\n        <button className=\"ql-bold button\"></button>\n        <button className=\"ql-italic button\"></button>\n        <button className=\"ql-underline button\"></button>\n        <button className=\"ql-strike button\"></button>\n      </span>\n      <span className=\"ql-formats\">\n        <select className=\"ql-color\"></select>\n        <select className=\"ql-background\"></select>\n      </span>\n      <span className=\"ql-formats\">\n        <button className=\"ql-script button\" value=\"sub\"></button>\n        <button className=\"ql-script button\" value=\"super\"></button>\n      </span>\n      <span className=\"ql-formats\">\n        <button className=\"ql-header button\" value=\"1\"></button>\n        <button className=\"ql-header button\" value=\"2\"></button>\n        <button className=\"ql-blockquote button\"></button>\n        <button className=\"ql-code-block button\"></button>\n      </span>\n      <span className=\"ql-formats\">\n        <button className=\"ql-list button\" value=\"ordered\"></button>\n        <button className=\"ql-list button\" value=\"bullet\"></button>\n        <button className=\"ql-indent button\" value=\"-1\"></button>\n        <button className=\"ql-indent button\" value=\"+1\"></button>\n      </span>\n      <span className=\"ql-formats\">\n        <button className=\"ql-direction button\" value=\"rtl\"></button>\n        <select className=\"ql-align\"></select>\n      </span>\n      <span className=\"ql-formats\">\n        <button className=\"ql-link button\"></button>\n        <button className=\"ql-image button\"></button>\n        <button className=\"ql-video button\"></button>\n        <button className=\"ql-formula button\"></button>\n      </span>\n      <span className=\"ql-formats\">\n        <button className=\"ql-clean button\"></button>\n      </span>\n    </React.Fragment>\n  );\n}\n\nexport default Toolbar;\n","import Quill from \"quill\";\n\nlet lastHandle: any;\n\nfunction getQuill() {\n  return (window as any).quillEditor;\n}\n\nfunction setupQuill() {\n  (window as any).quillEditor = new Quill(\"#editor\", {\n    theme: \"snow\",\n    modules: {\n      toolbar: {\n        container: \"#toolbar\",\n      },\n    },\n  });\n}\n\nfunction loadDocument(doc: any) {\n  getQuill().setContents(doc);\n}\n\nasync function openFilePicker() {\n  const [fileHandle] = await (window as any).showOpenFilePicker();\n  lastHandle = fileHandle;\n}\n\nasync function openFile() {\n  try {\n    await openFilePicker();\n    const file = await lastHandle.getFile();\n    const contents = await file.text();\n    loadDocument(JSON.parse(contents));\n  } catch (e) {\n    alert(\"Please do not resist.\");\n  }\n}\n\nasync function saveFile() {\n  if (lastHandle) {\n    const writable = await lastHandle.createWritable();\n    await writable.write(JSON.stringify(getQuill().getContents()));\n    await writable.close();\n  }\n}\n\nexport { getQuill, setupQuill, loadDocument, openFile, saveFile };\n","import React from \"react\";\nimport { Plus } from \"react-bootstrap-icons\";\n\nfunction Folders(props: any) {\n  return (\n    <React.Fragment>\n      <nav id=\"folders\" className={\"\" + (props.open ? \"open\" : \"\")}>\n        <p className=\"content mt-2\">\n          <h1>Folders</h1>\n        </p>\n        <div className=\"columns\">\n          <div className=\"column\">\n            {(() => {\n              let i = 0;\n              return [\"Folder\", \"Folder\", \"Folder\", \"Folder\", \"Folder\"].map(\n                (elem) => {\n                  i++;\n                  return (\n                    <button className=\"button is-white folder\" key={i}>\n                      {elem}\n                    </button>\n                  );\n                }\n              );\n            })()}\n            <button className=\"button is-white folder add\">\n              <Plus />\n            </button>\n          </div>\n          <div className=\"column\">\n            {(() => {\n              let i = 0;\n              return [\"Page\", \"Page\", \"Page\", \"Page\", \"Page\"].map((elem) => {\n                i++;\n                return (\n                  <button className=\"button is-white folder\" key={i}>\n                    {elem}\n                  </button>\n                );\n              });\n            })()}\n            <button className=\"button is-white folder add\">\n              <Plus />\n            </button>\n          </div>\n        </div>\n      </nav>\n    </React.Fragment>\n  );\n}\n\nexport default Folders;\n","import React from \"react\";\nimport {\n  ListUl,\n  ArrowLeft,\n  InfoCircle,\n  Upload,\n  Download,\n} from \"react-bootstrap-icons\";\nimport Toolbar from \"./Toolbar\";\nimport { openFile, saveFile } from \"../functions/editor\";\nimport Folders from \"./Folders\";\n\nfunction Navbar(props: any) {\n  return (\n    <React.Fragment>\n      <nav\n        className={(() => {\n          switch (props.foldersOpen) {\n            case true:\n              return \"navbar noTransparent\";\n            case false:\n              return \"navbar\";\n          }\n        })()}\n        role=\"navigation\"\n        aria-label=\"app controls\"\n        id=\"navbar\"\n      >\n\n        <div className=\"left\">\n          <button\n            className=\"button\"\n            onClick={() => props.setFoldersOpen(!props.foldersOpen)}\n          >\n            {props.foldersOpen ? <ArrowLeft /> : <ListUl />}\n          </button>\n          <button className=\"button\">\n            <InfoCircle />\n          </button>\n        </div>\n\n        <div className=\"center\" id=\"toolbar\">\n          <Toolbar />\n        </div>\n\n        <div className=\"right\">\n          <button className=\"button\" onClick={openFile}>\n            <Upload />\n          </button>\n          <button className=\"button\" onClick={saveFile}>\n            <Download />\n          </button>\n        </div>\n\n      </nav>\n      <Folders open={props.foldersOpen} />\n    </React.Fragment>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nfunction Editor(props: any) {\n  return (\n    <div\n      id=\"editor\"\n      className={\n        \"content ql-container ql-snow \" +\n        (props.foldersOpen ? \"foldersOpen\" : \"\")\n      }\n      onMouseDown={() => {\n        if (props.foldersOpen) props.setFoldersOpen(false);\n      }}\n    ></div>\n  );\n}\n\nexport default Editor;\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport Navbar from \"./components/Navbar\";\nimport Editor from \"./components/Editor\";\n\nfunction App() {\n  const [foldersOpen, setFoldersOpen] = useState(false);\n  return (\n    <div className=\"App\">\n      <Navbar foldersOpen={foldersOpen} setFoldersOpen={setFoldersOpen} />\n      <Editor foldersOpen={foldersOpen} setFoldersOpen={setFoldersOpen} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { setupQuill } from \"./functions/editor\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nsetupQuill();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}